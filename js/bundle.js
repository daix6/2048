!function t(e,n,r){function i(s,a){if(!n[s]){if(!e[s]){var u="function"==typeof require&&require;if(!a&&u)return u(s,!0);if(o)return o(s,!0);var d=new Error("Cannot find module '"+s+"'");throw d.code="MODULE_NOT_FOUND",d}var l=n[s]={exports:{}};e[s][0].call(l.exports,function(t){var n=e[s][1][t];return i(n?n:t)},l,l.exports,t,e,n,r)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<r.length;s++)i(r[s]);return i}({1:[function(t,e,n){!function(){"use strict";var e=t("./grid.js"),n=t("./game.js"),r=t("./handle.js"),i=t("./layout.js"),o=new n(e,r,i);o.init()}()},{"./game.js":2,"./grid.js":3,"./handle.js":4,"./layout.js":5}],2:[function(t,e,n){e.exports=function(){"use strict";function e(t,e,n){this.grid=new t,this.handle=new e,this.layout=new n,this.best=0,this.aim=2048}var n=(t("./util"),t("./pawn.js")),r=(t("./layout.js"),{0:{x:0,y:-1},1:{x:-1,y:0},2:{x:0,y:1},3:{x:1,y:0}});return e.prototype.init=function(){var t=this;t.score=0,t.win=!1,t.over=!1,t.grid.setUp(),t.layout.render(this),t.layout.renderScore(0),t.handle.on("move",this.move.bind(this)),t.handle.on("retry",this.retry.bind(this)),t.handle.on("disable",this.disable.bind(this)),t.handle.setUp()},e.prototype.move=function(t){var e=this,i=r[t],o=!1,s={x:[0,1,2,3],y:[0,1,2,3]};1===i.x&&(s.x=[3,2,1,0]),1===i.y&&(s.y=[3,2,1,0]),s.x.forEach(function(t){s.y.forEach(function(r){var s=e.grid.getPawn(t,r);if(s){var a=s.getDest(i),u=e.grid.getPawn(a.x+i.x,a.y+i.y);if(u&&u.value===s.value&&!u.merged){var d=new n(u.x,u.y,2*u.value,e.grid);d.merged=!0,e.grid.movePawn(s,u.x,u.y),e.grid.movePawn(u,u.x,u.y),e.grid.insertPawn(d),e.score+=d.value,d.value===e.aim&&(e.win=!0),o=!0}else(s.x!==a.x||s.y!==a.y)&&(o=!0),e.grid.movePawn(s,a.x,a.y)}})}),o?e.grid.createPawn():e.grid.canMove()||(e.over=!0),e.layout.render(e),e.layout.renderScore(e.score)},e.prototype.retry=function(){var t=this;t.score=0,t.win=!1,t.over=!1,t.layout.removeResult(),t.grid.setUp(),t.layout.render(this),t.layout.renderScore(0),t.handle.on("move",this.move.bind(this))},e.prototype.disable=function(){var t=this;t.handle.remove("move")},e}()},{"./layout.js":5,"./pawn.js":6,"./util":7}],3:[function(t,e,n){e.exports=function(){"use strict";function e(){this.size=4,this.nodes=[]}var n=t("./pawn.js"),r=t("./util.js");return e.prototype.setUp=function(){for(var t=0;t<this.size;t++){this.nodes[t]=[];for(var e=0;e<this.size;e++)this.nodes[t][e]=null}this.createPawn()},e.prototype.isValid=function(t,e){return t<this.size&&t>=0&&e<this.size&&e>=0},e.prototype.isOccupied=function(t,e){return this.nodes[t][e]?!0:!1},e.prototype.isFull=function(){for(var t=0;t<this.size;t++)for(var e=0;e<this.size;e++)if(!this.nodes[t][e])return!1;return!0},e.prototype.canMove=function(){if(!this.isFull())return!0;for(var t=0;t<this.size;t++)for(var e=0;e<this.size;e++){if(t<this.size-1&&this.nodes[t][e].value===this.nodes[t+1][e].value)return!0;if(e<this.size-1&&this.nodes[t][e].value===this.nodes[t][e+1].value)return!0}return!1},e.prototype.getPawn=function(t,e){return this.isValid(t,e)?this.nodes[t][e]:null},e.prototype.createPawn=function(){for(var t=Math.floor(4*Math.random()),e=Math.floor(4*Math.random());this.isOccupied(t,e);)t=Math.floor(4*Math.random()),e=Math.floor(4*Math.random());var r=Math.random()<.3?4:2,i=new n(t,e,r,this);this.nodes[t][e]=i},e.prototype.insertPawn=function(t){this.nodes[t.x][t.y]=t},e.prototype.removePawn=function(t,e){this.nodes[t][e]=null},e.prototype.movePawn=function(t,e,n){this.nodes[t.x][t.y]=null,t.previous={x:t.x,y:t.y},t.x=e,t.y=n,this.nodes[e][n]=t},e.prototype.clean=function(){for(var t=document.getElementsByClassName("numbers")[0];t.firstChild;)t.removeChild(t.firstChild)},e.prototype.render=function(){var t=document.getElementsByClassName("numbers")[0];this.clean();for(var e=0;e<this.size;e++)for(var n=0;n<this.size;n++)if(this.nodes[e][n]){var i=this.nodes[e][n],o=document.createElement("div");o.setAttribute("class","c-"+i.value),o.textContent?o.textContent=i.value:o.innerHTML=i.value,i.merged?(r.addClass(o,"p-"+i.x+"-"+i.y),r.addClass(o,"merged")):i.previous?r.addClass(o,"p-"+i.previous.x+"-"+i.previous.y):(r.addClass(o,"p-"+i.x+"-"+i.y),r.addClass(o,"new")),t.appendChild(o),i.previous&&o.setAttribute("class",o.getAttribute("class").replace(/p-\d-\d/,"p-"+i.x+"-"+i.y)),i.merged=!1,i.previous=null}},e}()},{"./pawn.js":6,"./util.js":7}],4:[function(t,e,n){e.exports=function(){"use strict";function e(){this.handler=[]}var n=t("./util.js");return e.prototype.on=function(t,e){return this.handler[t]||(this.handler[t]=[]),this.handler[t].push(e),this},e.prototype.emit=function(t){for(var e=Array.prototype.slice.call(arguments,1),n=0,r=this.handler[t].length;r>n;n++)this.handler[t][n].apply(this,e);return this},e.prototype.remove=function(t){return this.handler[t]=[],this},e.prototype.setUp=function(){var t=this,e={37:0,38:1,39:2,40:3,65:0,68:2,87:1,83:3,97:0,119:1,100:2,115:3},r=window.navigator.msPointerEnabled?"MSPointerDown":"touchstart",i=window.navigator.msPointerEnabled?"MSPointerMove":"touchmove",o=window.navigator.msPointerEnabled?"MSPointerUp":"touchend";n.addEvent(document,"keydown",function(n){var r=e[n.which];"undefined"!=typeof r&&(t.emit("move",r),n.preventDefault())});var s,a,u,d,l=document.getElementsByClassName("game-container")[0];n.addEvent(l,r,function(t){!window.navigator.msPointerEnabled&&t.touches.length>1||t.targetTouches>1||(window.navigator.msPointerEnabled?(s=t.pageX,a=t.pageY):(s=t.touches[0].clientX,a=t.touches[0].clientY),t.preventDefault())}),n.addEvent(l,i,function(t){t.preventDefault()}),n.addEvent(l,o,function(e){if(!(!window.navigator.msPointerEnabled&&e.touches.length>1||e.targetTouches>1)){window.navigator.msPointerEnabled?(u=e.pageX,d=e.pageY):(u=e.changedTouches[0].clientX,d=e.changedTouches[0].clientY);var n=Math.abs(s-u),r=Math.abs(a-d);Math.max(n,r)>10&&t.emit("move",n>r?u>s?2:0:d>a?3:1)}});for(var c=document.getElementsByClassName("retry"),h=0,v=c.length;v>h;h++)!function(e){n.addEvent(c[e],"click",function(e){e.preventDefault(),t.emit("retry")}),n.addEvent(c[e],"touchend",function(e){e.preventDefault(),t.emit("retry")})}(h)},e}()},{"./util.js":7}],5:[function(t,e,n){e.exports=function(){"use strict";function e(){this.best=0,this.win=!1,this.over=!1}var n=t("./util.js");return e.prototype.render=function(t){t.grid.render(),(t.win||t.over)&&(t.handle.emit("disable"),t.win?this.renderWin():this.renderOver(),t.score&&this.best<t.score&&(this.best=t.score,this.renderBest()))},e.prototype.renderScore=function(t){t=t;var e=document.getElementById("score");e.textContent?e.textContent=t:e.innerHTML=t},e.prototype.renderWin=function(){var t=document.getElementById("win");t.style.display="block",n.addClass(t,"result")},e.prototype.renderOver=function(){var t=document.getElementById("over");t.style.display="block",n.addClass(t,"result")},e.prototype.renderBest=function(){var t=document.getElementById("best");t.textContent?t.textContent=this.best:t.innerHTML=this.best},e.prototype.removeResult=function(){var t=document.getElementById("win"),e=document.getElementById("over");t.style.display="none",e.style.display="none",n.removeClass(t,"result"),n.removeClass(e,"result")},e}()},{"./util.js":7}],6:[function(t,e,n){e.exports=function(){"use strict";function t(t,e,n,r){this.x=t,this.y=e,this.value=n,this.grid=r,this.merged=!1,this.previous=null}return t.prototype.getGrid=function(){return this.grid},t.prototype.getDest=function(t){for(var e={x:this.x,y:this.y};;){var n={x:e.x+t.x,y:e.y+t.y};if(!this.grid.isValid(n.x,n.y)||this.grid.isOccupied(n.x,n.y))break;e=n}return e},t.prototype.getNext=function(t){return this.grid.getPawn(this.x+t.x,this.y+t.y)},t}()},{}],7:[function(t,e,n){e.exports=function(){"use strict";function t(t,e,n){t.addEventListener?t.addEventListener(e,n,!1):t.attachEvent&&t.attachEvent("on"+e,n)}function e(t,e,n){t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent&&t.detachEvent("on"+e,n)}function n(t){return t.getAttribute&&t.getAttribute("class")||""}function r(t,e){return n(t).indexOf(e)>-1?!0:!1}function i(t,e){if(!r(t,e)){var i=" "+n(t)+" ";i+=e+" ",t.setAttribute("class",i.trim())}}function o(t,e){if(r(t,e)){var i=new RegExp("(\\s|^)"+e+"(\\s|$)","g");t.setAttribute("class",n(t).replace(i," ").trim())}}return{addEvent:t,removeEvent:e,hasClass:r,addClass:i,removeClass:o}}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
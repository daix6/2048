!function t(e,n,r){function i(o,a){if(!n[o]){if(!e[o]){var u="function"==typeof require&&require;if(!a&&u)return u(o,!0);if(s)return s(o,!0);var d=new Error("Cannot find module '"+o+"'");throw d.code="MODULE_NOT_FOUND",d}var h=n[o]={exports:{}};e[o][0].call(h.exports,function(t){var n=e[o][1][t];return i(n?n:t)},h,h.exports,t,e,n,r)}return n[o].exports}for(var s="function"==typeof require&&require,o=0;o<r.length;o++)i(r[o]);return i}({1:[function(t,e,n){!function(){"use strict";var e=t("./grid.js"),n=t("./game.js"),r=t("./handle.js"),i=new n(e,r);i.init()}()},{"./game.js":2,"./grid.js":3,"./handle.js":4}],2:[function(t,e,n){e.exports=function(){"use strict";function e(t,e){this.grid=new t,this.handle=new e}var n=(t("./util"),t("./pawn.js")),r={0:{x:0,y:-1},1:{x:-1,y:0},2:{x:0,y:1},3:{x:1,y:0}};return e.prototype.init=function(){this.score=0,this.win=!1,this.over=!1,this.grid.setUp(),this.handle.on("move",this.move.bind(this)),this.handle.setUp()},e.prototype.move=function(t){var e=this,i=r[t],s={x:[0,1,2,3],y:[0,1,2,3]};1===i.x&&(s.x=[3,2,1,0]),1===i.y&&(s.y=[3,2,1,0]),s.x.forEach(function(t){s.y.forEach(function(r){var s=e.grid.getPawn(t,r);if(s){var o=s.getDest(i),a=e.grid.getPawn(o.x+i.x,o.y+i.y);if(a&&a.value===s.value&&!a.merged){var u=new n(a.x,a.y,2*a.value,e.grid);u.merged=!0,e.grid.movePawn(s,a.x,a.y),e.grid.movePawn(a,a.x,a.y),e.grid.insertPawn(u),e.score+=u.value}else e.grid.movePawn(s,o.x,o.y)}})}),e.grid.createPawn(),e.grid.render()},e}()},{"./pawn.js":5,"./util":6}],3:[function(t,e,n){e.exports=function(){"use strict";function e(){this.size=4,this.nodes=[]}var n=t("./pawn.js"),r=t("./util.js");return e.prototype.setUp=function(){for(var t=0;t<this.size;t++){this.nodes[t]=[];for(var e=0;e<this.size;e++)this.nodes[t][e]=null}this.createPawn(),this.render()},e.prototype.isValid=function(t,e){return t<this.size&&t>=0&&e<this.size&&e>=0},e.prototype.isOccupied=function(t,e){return this.nodes[t][e]?!0:!1},e.prototype.getPawn=function(t,e){return this.isValid(t,e)?this.nodes[t][e]:null},e.prototype.createPawn=function(){for(var t=Math.floor(4*Math.random()),e=Math.floor(4*Math.random());this.isOccupied(t,e);)t=Math.floor(4*Math.random()),e=Math.floor(4*Math.random());var r=Math.random()<.3?4:2,i=new n(t,e,r,this);this.nodes[t][e]=i},e.prototype.insertPawn=function(t){this.nodes[t.x][t.y]=t},e.prototype.removePawn=function(t,e){this.nodes[t][e]=null},e.prototype.movePawn=function(t,e,n){this.nodes[t.x][t.y]=null,t.previous={x:t.x,y:t.y},t.x=e,t.y=n,this.nodes[e][n]=t},e.prototype.clean=function(){for(var t=document.getElementsByClassName("numbers")[0];t.firstChild;)t.removeChild(t.firstChild)},e.prototype.render=function(){var t=document.getElementsByClassName("numbers")[0];this.clean();for(var e=0;e<this.size;e++)for(var n=0;n<this.size;n++)if(this.nodes[e][n]){var i=this.nodes[e][n],s=document.createElement("div");s.setAttribute("class","c-"+i.value),s.textContent?s.textContent=i.value:s.innerText=i.value,i.merged?(r.addClass(s,"p-"+i.x+"-"+i.y),r.addClass(s,"merged")):i.previous?(r.addClass(s,"p-"+i.previous.x+"-"+i.previous.y),r.addClass(s,"parallel")):(r.addClass(s,"p-"+i.x+"-"+i.y),r.addClass(s,"new")),t.appendChild(s),i.previous&&s.setAttribute("class",s.getAttribute("class").replace(/p-\d-\d/,"p-"+i.x+"-"+i.y)),i.merged=!1,i.previous=null}},e}()},{"./pawn.js":5,"./util.js":6}],4:[function(t,e,n){e.exports=function(){"use strict";function e(){this.handler=[]}var n=t("./util.js");return e.prototype.on=function(t,e){return this.handler[t]||(this.handler[t]=[]),this.handler[t].push(e),this},e.prototype.emit=function(t){for(var e=Array.prototype.slice.call(arguments,1),n=0,r=this.handler[t].length;r>n;n++)this.handler[t][n].apply(this,e);return this},e.prototype.setUp=function(){var t=this,e={37:0,38:1,39:2,40:3};n.addEvent(document,"keydown",function(n){var r=e[n.which];"undefined"!=typeof r&&(t.emit("move",r),n.preventDefault())})},e}()},{"./util.js":6}],5:[function(t,e,n){e.exports=function(){"use strict";function t(t,e,n,r){this.x=t,this.y=e,this.value=n,this.grid=r,this.merged=!1,this.previous=null}return t.prototype.getGrid=function(){return this.grid},t.prototype.getDest=function(t){for(var e={x:this.x,y:this.y};;){var n={x:e.x+t.x,y:e.y+t.y};if(!this.grid.isValid(n.x,n.y)||this.grid.isOccupied(n.x,n.y))break;e=n}return e},t.prototype.getNext=function(t){return this.grid.getPawn(this.x+t.x,this.y+t.y)},t}()},{}],6:[function(t,e,n){e.exports=function(){"use strict";function t(t,e,n){t.addEventListener?t.addEventListener(e,n,!1):t.attachEvent&&t.attachEvent("on"+e,n)}function e(t){return t.getAttribute&&t.getAttribute("class")||""}function n(t,n){return e(t).indexOf(n)>-1?!0:!1}function r(t,r){if(!n(t,r)){var i=" "+e(t)+" ";i+=r+" ",t.setAttribute("class",i.trim())}}function i(t,r){if(n(t,r)){var i=new RegExp("(\\s|^)"+r+"(\\s|$)","g");t.setAttribute("class",e(t).replace(i," ").trim())}}return{addEvent:t,hasClass:n,addClass:r,removeClass:i}}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
!function e(t,n,r){function o(s,a){if(!n[s]){if(!t[s]){var u="function"==typeof require&&require;if(!a&&u)return u(s,!0);if(i)return i(s,!0);var d=new Error("Cannot find module '"+s+"'");throw d.code="MODULE_NOT_FOUND",d}var l=n[s]={exports:{}};t[s][0].call(l.exports,function(e){var n=t[s][1][e];return o(n?n:e)},l,l.exports,e,t,n,r)}return n[s].exports}for(var i="function"==typeof require&&require,s=0;s<r.length;s++)o(r[s]);return o}({1:[function(e,t,n){!function(){"use strict";var t=e("./grid.js"),n=e("./game.js"),r=e("./handle.js"),o=e("./layout.js"),i=e("./store.js"),s=new n(t,r,o,i);s.init()}()},{"./game.js":2,"./grid.js":3,"./handle.js":4,"./layout.js":5,"./store.js":7}],2:[function(e,t,n){t.exports=function(){"use strict";function t(e,t,n,r){this.grid=new e,this.handle=new t,this.layout=new n,this.store=new r,this.aim=2048}var n=(e("./util"),e("./pawn.js")),r=(e("./layout.js"),{0:{x:0,y:-1},1:{x:-1,y:0},2:{x:0,y:1},3:{x:1,y:0}});return t.prototype.init=function(){var e=this;window.localStorage.getItem("score")?e.score=parseInt(window.localStorage.getItem("score")):e.score=0,e.win=!1,e.over=!1,e.grid.setUp(),e.layout.render(e),e.layout.renderScore(e.score),e.layout.renderBest(),e.handle.on("move",this.move.bind(e)),e.handle.on("retry",this.retry.bind(e)),e.handle.on("disable",this.disable.bind(e)),e.handle.on("store",this.beforeleave.bind(e)),e.handle.setUp()},t.prototype.move=function(e){var t=this,o=r[e],i=!1,s={x:[0,1,2,3],y:[0,1,2,3]};1===o.x&&(s.x=[3,2,1,0]),1===o.y&&(s.y=[3,2,1,0]),s.x.forEach(function(e){s.y.forEach(function(r){var s=t.grid.getPawn(e,r);if(s){var a=s.getDest(o),u=t.grid.getPawn(a.x+o.x,a.y+o.y);if(u&&u.value===s.value&&!u.merged){var d=new n(u.x,u.y,2*u.value,t.grid);d.merged=!0,t.grid.movePawn(s,u.x,u.y),t.grid.movePawn(u,u.x,u.y),t.grid.insertPawn(d),t.score+=d.value,d.value===t.aim&&(t.win=!0),i=!0}else(s.x!==a.x||s.y!==a.y)&&(i=!0),t.grid.movePawn(s,a.x,a.y)}})}),i&&t.grid.createPawn(),t.grid.canMove()||(t.over=!0),t.layout.render(t),t.layout.renderScore(t.score)},t.prototype.retry=function(){var e=this;e.score=0,e.win=!1,e.over=!1,e.layout.removeResult(),e.grid.clear(),e.grid.createPawn(),e.layout.render(e),e.layout.renderScore(0),e.handle.on("move",this.move.bind(e))},t.prototype.disable=function(){var e=this;e.handle.remove("move")},t.prototype.beforeleave=function(){var e=this;e.store.store(e)},t}()},{"./layout.js":5,"./pawn.js":6,"./util":8}],3:[function(e,t,n){t.exports=function(){"use strict";function t(){this.size=4,this.nodes=[]}var n=e("./pawn.js"),r=e("./util.js");return t.prototype.setUp=function(){if(window.localStorage.getItem("nodes"))for(var e=window.localStorage.getItem("nodes").split(","),t=0;t<this.size;t++){this.nodes[t]=[];for(var r=0;r<this.size;r++){var o=e[t*this.size+r];"n"===o?this.nodes[t][r]=null:this.nodes[t][r]=new n(t,r,parseInt(o),this)}}else this.clear(),this.createPawn()},t.prototype.clear=function(){for(var e=0;e<this.size;e++){this.nodes[e]=[];for(var t=0;t<this.size;t++)this.nodes[e][t]=null}},t.prototype.isValid=function(e,t){return e<this.size&&e>=0&&t<this.size&&t>=0},t.prototype.isOccupied=function(e,t){return this.nodes[e][t]?!0:!1},t.prototype.isFull=function(){for(var e=0;e<this.size;e++)for(var t=0;t<this.size;t++)if(!this.nodes[e][t])return!1;return!0},t.prototype.canMove=function(){if(!this.isFull())return!0;for(var e=0;e<this.size;e++)for(var t=0;t<this.size;t++){if(e<this.size-1&&this.nodes[e][t].value===this.nodes[e+1][t].value)return!0;if(t<this.size-1&&this.nodes[e][t].value===this.nodes[e][t+1].value)return!0}return!1},t.prototype.getPawn=function(e,t){return this.isValid(e,t)?this.nodes[e][t]:null},t.prototype.createPawn=function(){for(var e=Math.floor(4*Math.random()),t=Math.floor(4*Math.random());this.isOccupied(e,t);)e=Math.floor(4*Math.random()),t=Math.floor(4*Math.random());var r=Math.random()<.3?4:2,o=new n(e,t,r,this);this.nodes[e][t]=o},t.prototype.insertPawn=function(e){this.nodes[e.x][e.y]=e},t.prototype.removePawn=function(e,t){this.nodes[e][t]=null},t.prototype.movePawn=function(e,t,n){this.nodes[e.x][e.y]=null,e.previous={x:e.x,y:e.y},e.x=t,e.y=n,this.nodes[t][n]=e},t.prototype.clean=function(){for(var e=document.getElementsByClassName("numbers")[0];e.firstChild;)e.removeChild(e.firstChild)},t.prototype.render=function(){var e=document.getElementsByClassName("numbers")[0];this.clean();for(var t=0;t<this.size;t++)for(var n=0;n<this.size;n++)if(this.nodes[t][n]){var o=this.nodes[t][n],i=document.createElement("div");i.setAttribute("class","c-"+o.value),i.textContent?i.textContent=o.value:i.innerHTML=o.value,o.merged?(r.addClass(i,"p-"+o.x+"-"+o.y),r.addClass(i,"merged")):o.previous?r.addClass(i,"p-"+o.previous.x+"-"+o.previous.y):(r.addClass(i,"p-"+o.x+"-"+o.y),r.addClass(i,"new")),e.appendChild(i),o.previous&&i.setAttribute("class",i.getAttribute("class").replace(/p-\d-\d/,"p-"+o.x+"-"+o.y)),o.merged=!1,o.previous=null}},t.prototype.toString=function(){for(var e=this,t="",n=0;n<e.size;n++)for(var r=0;r<e.size;r++)t+=e.nodes[n][r]?e.nodes[n][r].value:"n",(n!==e.size-1||n!==r)&&(t+=",");return t},t}()},{"./pawn.js":6,"./util.js":8}],4:[function(e,t,n){t.exports=function(){"use strict";function t(){this.handler=[]}var n=e("./util.js");return t.prototype.on=function(e,t){return this.handler[e]||(this.handler[e]=[]),this.handler[e].push(t),this},t.prototype.emit=function(e){for(var t=Array.prototype.slice.call(arguments,1),n=0,r=this.handler[e].length;r>n;n++)this.handler[e][n].apply(this,t);return this},t.prototype.remove=function(e){return this.handler[e]=[],this},t.prototype.setUp=function(){var e=this,t={37:0,38:1,39:2,40:3,65:0,68:2,87:1,83:3,97:0,119:1,100:2,115:3},r=window.navigator.msPointerEnabled?"MSPointerDown":"touchstart",o=window.navigator.msPointerEnabled?"MSPointerMove":"touchmove",i=window.navigator.msPointerEnabled?"MSPointerUp":"touchend";n.addEvent(document,"keydown",function(n){var r=t[n.which];"undefined"!=typeof r&&(e.emit("move",r),n.preventDefault())});var s,a,u,d,l=document.getElementsByClassName("game-container")[0];n.addEvent(l,r,function(e){!window.navigator.msPointerEnabled&&e.touches.length>1||e.targetTouches>1||(window.navigator.msPointerEnabled?(s=e.pageX,a=e.pageY):(s=e.touches[0].clientX,a=e.touches[0].clientY),e.preventDefault())}),n.addEvent(l,o,function(e){e.preventDefault()}),n.addEvent(l,i,function(t){if(!(!window.navigator.msPointerEnabled&&t.touches.length>1||t.targetTouches>1)){window.navigator.msPointerEnabled?(u=t.pageX,d=t.pageY):(u=t.changedTouches[0].clientX,d=t.changedTouches[0].clientY);var n=Math.abs(s-u),r=Math.abs(a-d);Math.max(n,r)>10&&!(Math.min(n,r)>200)&&e.emit("move",n>r?u>s?2:0:d>a?3:1)}});for(var c=document.getElementsByClassName("retry"),h=0,v=c.length;v>h;h++)!function(t){n.addEvent(c[t],"click",function(t){t.preventDefault(),e.emit("retry")}),n.addEvent(c[t],"touchend",function(t){t.preventDefault(),e.emit("retry")})}(h);n.addEvent(window,"beforeunload",function(t){e.emit("store")})},t}()},{"./util.js":8}],5:[function(e,t,n){t.exports=function(){"use strict";function t(){window.localStorage.getItem("best")?this.best=parseInt(window.localStorage.getItem("best")):this.best=0}var n=e("./util.js");return t.prototype.render=function(e){e.grid.render(),(e.win||e.over)&&(e.handle.emit("disable"),e.win?this.renderWin():this.renderOver(),e.score&&this.best<e.score&&(this.best=e.score,this.renderBest()))},t.prototype.renderScore=function(e){e=e;var t=document.getElementById("score");t.textContent?t.textContent=e:t.innerHTML=e},t.prototype.renderWin=function(){var e=document.getElementById("win");e.style.display="block",n.addClass(e,"result")},t.prototype.renderOver=function(){var e=document.getElementById("over");e.style.display="block",n.addClass(e,"result")},t.prototype.renderBest=function(){var e=document.getElementById("best");e.textContent?e.textContent=this.best:e.innerHTML=this.best},t.prototype.removeResult=function(){var e=document.getElementById("win"),t=document.getElementById("over");e.style.display="none",t.style.display="none",n.removeClass(e,"result"),n.removeClass(t,"result")},t}()},{"./util.js":8}],6:[function(e,t,n){t.exports=function(){"use strict";function e(e,t,n,r){this.x=e,this.y=t,this.value=n,this.grid=r,this.merged=!1,this.previous=null}return e.prototype.getGrid=function(){return this.grid},e.prototype.getDest=function(e){for(var t={x:this.x,y:this.y};;){var n={x:t.x+e.x,y:t.y+e.y};if(!this.grid.isValid(n.x,n.y)||this.grid.isOccupied(n.x,n.y))break;t=n}return t},e.prototype.getNext=function(e){return this.grid.getPawn(this.x+e.x,this.y+e.y)},e}()},{}],7:[function(e,t,n){t.exports=function(){"use strict";function e(){}return e.prototype.store=function(e){this.storeGame(e),this.storeGrid(e)},e.prototype.storeGame=function(e){e.win||e.over?window.localStorage.removeItem("score"):window.localStorage.setItem("score",e.score),window.localStorage.setItem("best",e.layout.best)},e.prototype.storeGrid=function(e){e.win||e.over?window.localStorage.removeItem("nodes"):window.localStorage.setItem("nodes",e.grid.toString())},e}()},{}],8:[function(e,t,n){t.exports=function(){"use strict";function e(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent&&e.attachEvent("on"+t,n)}function t(e,t,n){e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent&&e.detachEvent("on"+t,n)}function n(e){return e.getAttribute&&e.getAttribute("class")||""}function r(e,t){return n(e).indexOf(t)>-1?!0:!1}function o(e,t){if(!r(e,t)){var o=" "+n(e)+" ";o+=t+" ",e.setAttribute("class",o.trim())}}function i(e,t){if(r(e,t)){var o=new RegExp("(\\s|^)"+t+"(\\s|$)","g");e.setAttribute("class",n(e).replace(o," ").trim())}}return{addEvent:e,removeEvent:t,hasClass:r,addClass:o,removeClass:i}}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,